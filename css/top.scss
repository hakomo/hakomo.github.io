@import 'default';

$margin: 8px;
$radius: 4px;
$card-rows: 3;
$card-width: 300px;
$card-height: 288px;
$scrollbar-width: 17px;
$font-size: 16px;

html, body {
    height: 100%;
    font-family: 'Hiragino Kaku Gothic ProN', Meiryo, sans-serif;
    font-size: $font-size;
    line-height: 1.5;
    background-color: hsl(170, 40%, 95%);
}

#wrapper {
    min-height: 100%;
    margin: auto;
    position: relative;
}

#footer {
    position: absolute;
    bottom: 0;
    width: 100%;
}

@function width($n) {
    @return $card-width * $n + $margin * ($n - 1);
}

.label span {
    display: inline-block;
    padding: $margin / 2 $margin;
    border-radius: $radius;
}

#header {
    display: flex;
    flex-wrap: wrap;

    > div {
        box-sizing: border-box;
        width: $card-width;
        height: 128px;
    }
}

#container > :last-child {
    margin-bottom: $margin * 4;
}

.card {
    display: flex;
    flex-wrap: wrap;

    a[href] {
        width: $card-width;
        height: $card-height;
        margin-top: $margin * 4;
        border-radius: $radius;
        color: black;
        text-decoration: none;

        div {
            padding: 0 $margin * 2;
        }
    }

    a[href]:hover {
        opacity: 0.8;
    }
}

@mixin card-back($hue) {
    background: linear-gradient(to right bottom, hsl($hue, 100%, 85%), hsl($hue, 50%, 65%));
}

@mixin in($width, $header-height, $footer-height, $card-rows) {

    @if $card-rows == 1 {
        .label {
            span {
                width: $card-width / 2 - $margin * 2.5;
            }

            > :nth-child(even) {
                margin-left: $margin;
            }

            > :nth-child(n+3) {
                margin-top: $margin;
            }
        }
    } @else {
        .label > :not(:first-child) {
            margin-left: $margin;
        }
    }

    @if $card-rows != 3 {
        .space {
            display: none;
        }
    }

    #wrapper {
        width: $width;
    }

    #header {
        height: $header-height;

        > :not(:nth-child(#{$card-rows}n+1)) {
            margin-left: $margin;
        }
    }

    #footer {
        height: $footer-height;
    }

    #container {
        padding-bottom: $footer-height;
    }

    .card > :not(:nth-child(#{$card-rows}n+1)) {
        margin-left: $margin;
    }
}

h1 {
    font-size: 32px;
    line-height: 1;
    font-weight: normal;
}

.header {
    padding: 36px $margin * 2;
}

.social {
    padding: $margin * 4 0;

    a[href] {
        padding: 4px $margin;
        line-height: 2;
        color: black;
        text-decoration: none;
    }

    a[href]:hover {
        text-decoration: underline;
    }
}

img {
    border-radius: $radius $radius 0 0;
}

.android {
    @include card-back(90);
}

.firefox {
    @include card-back(20);
}

.web {
    @include card-back(50);
}

.windows {
    @include card-back(200);
}

@for $i from 1 through $card-rows {
    @media screen and (min-width: if($i == 1, 0px, width($i) + $scrollbar-width))
            and (max-width: if($i == $card-rows, 9000px, width($i + 1) + $scrollbar-width - 1px)) {
        @include in(width($i), if($i == 1, 256px, 128px), if($i == 1, 11, if($i == 2, 7, 5)) * 24px + $margin * 4, $i);
    }
}
